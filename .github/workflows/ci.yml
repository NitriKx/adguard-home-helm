name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  lint-and-test:
    name: Lint and Test Helm Chart
    runs-on: ubuntu-latest

    strategy:
      matrix:
        kubernetes-version: ["1.20.15", "1.25.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.0

    - name: Setup helm-unittest plugin
      run: |
        helm plugin install https://github.com/helm-unittest/helm-unittest.git --version v0.3.4

    - name: Cache Helm dependencies
      uses: actions/cache@v3
      with:
        path: ~/Library/Caches/helm/repository
        key: ${{ runner.os }}-helm-${{ hashFiles('**/Chart.yaml') }}
        restore-keys: |
          ${{ runner.os }}-helm-

    - name: Run Helm lint
      run: |
        echo "üîç Running Helm lint..."
        helm lint charts/adguard-home

    - name: Run Helm unit tests
      run: |
        echo "üß™ Running Helm unit tests..."
        helm unittest charts/adguard-home

    - name: Test chart templating
      run: |
        echo "üìã Testing chart templating..."
        helm template test charts/adguard-home > /dev/null

    - name: Test chart templating with custom values
      run: |
        echo "üìã Testing chart templating with custom values..."
        helm template test charts/adguard-home \
          --set adguardHome.timezone="America/New_York" \
          --set persistence.enabled=true \
          --set ingress.enabled=true \
          --set healthCheck.enabled=true > /dev/null

    - name: Test chart templating with config YAML
      run: |
        echo "üìã Testing chart templating with custom config..."
        helm template test charts/adguard-home \
          --set 'adguardHome.configYaml=bind_host: 0.0.0.0' > /dev/null

    - name: Test Kubernetes version compatibility
      run: |
        echo "üîß Testing Kubernetes ${{ matrix.kubernetes-version }} compatibility..."
        helm template test charts/adguard-home --kube-version ${{ matrix.kubernetes-version }} > /dev/null
        echo "‚úÖ Compatible with Kubernetes ${{ matrix.kubernetes-version }}"

    - name: Validate chart
      run: |
        echo "üîç Validating chart..."
        helm lint charts/adguard-home

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: './charts/adguard-home'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  release-pr:
    name: Create Release PR
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install release-please
      run: npm install -g release-please

    - name: Run release-please
      run: release-please release-pr --repo-url=NitriKx/adguard-home-helm --target-branch=main --config-file=.github/release-please-config.json --manifest-file=.github/release-please-manifest.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
